'Multi_Hit',
'Frame_Shift_Ins',
'In_Frame_Ins',
'Splice_Site',
'In_Frame_Del',
'LOH'
)
polyp_maf = read.maf(maf = maf_file,
cnTable = cn.data,
verbose = FALSE)
oncoplot(maf = polyp_maf,drawColBar=F, colors = all_cols,top = 100, bgCol = "#EEEEEE", titleText = 'Adenomatous polyps')
# Oncoplot for ACF
maf_file="../data/acf.maf"
acf_maf = read.maf(maf = maf_file,
verbose = FALSE)
oncoplot(maf = acf_maf,drawColBar=F, colors = all_cols,top = 100, bgCol = "#EEEEEE", titleText = 'ACF')
# Merge oncoplot for polyps and ACF
coOncoplot(m1 = acf_maf, m2 = polyp_maf,  m1Name = 'ACF', m2Name = 'Adenomatous polyps', colors = all_cols,bgCol = "#EEEEEE")
# Merge oncoplot for polyps and ACF
coOncoplot(m1 = acf_maf, m2 = polyp_maf, genes = unique(c(acf_maf@gene.summary$Hugo_Symbol,polyp_maf@gene.summary$Hugo_Symbol)), m1Name = 'ACF', m2Name = 'Adenomatous polyps', colors = all_cols,bgCol = "#EEEEEE")
# Merge oncoplot for polyps and ACF
coOncoplot(m1 = acf_maf, m2 = polyp_maf, genes = unique(c(acf_maf@gene.summary$Hugo_Symbol,polyp_maf@gene.summary$Hugo_Symbol)), m1Name = 'ACF', m2Name = 'Adenomatous polyps', colors = all_cols,bgCol = "#EEEEEE",removeNonMutated = FALSE)
pdf(paste0("/Users/yw2/Library/CloudStorage/OneDrive-UniversityofCambridge/PhD/fap/figure/Fig2/lolliplot.pdf"),width = 6, height = 4)
coOncoplot(m1 = acf_maf, m2 = polyp_maf, genes = unique(c(acf_maf@gene.summary$Hugo_Symbol,polyp_maf@gene.summary$Hugo_Symbol)), m1Name = 'ACF', m2Name = 'Adenomatous polyps', colors = all_cols,bgCol = "#EEEEEE",removeNonMutated = FALSE)
dev.off()
pdf(paste0("/Users/yw2/Library/CloudStorage/OneDrive-UniversityofCambridge/PhD/fap/figure/Fig2/lolliplot.pdf"),width = 6.5, height = 4)
coOncoplot(m1 = acf_maf, m2 = polyp_maf, genes = unique(c(acf_maf@gene.summary$Hugo_Symbol,polyp_maf@gene.summary$Hugo_Symbol)), m1Name = 'ACF', m2Name = 'Adenomatous polyps', colors = all_cols,bgCol = "#EEEEEE",removeNonMutated = FALSE)
dev.off()
pdf(paste0("/Users/yw2/Library/CloudStorage/OneDrive-UniversityofCambridge/PhD/fap/figure/Fig2/lolliplot.pdf"),width = 7, height = 4)
coOncoplot(m1 = acf_maf, m2 = polyp_maf, genes = unique(c(acf_maf@gene.summary$Hugo_Symbol,polyp_maf@gene.summary$Hugo_Symbol)), m1Name = 'ACF', m2Name = 'Adenomatous polyps', colors = all_cols,bgCol = "#EEEEEE",removeNonMutated = FALSE)
dev.off()
pdf(paste0("/Users/yw2/Library/CloudStorage/OneDrive-UniversityofCambridge/PhD/fap/figure/Fig2/lolliplot.pdf"),width = 8, height = 4)
coOncoplot(m1 = acf_maf, m2 = polyp_maf, genes = unique(c(acf_maf@gene.summary$Hugo_Symbol,polyp_maf@gene.summary$Hugo_Symbol)), m1Name = 'ACF', m2Name = 'Adenomatous polyps', colors = all_cols,bgCol = "#EEEEEE",removeNonMutated = FALSE)
dev.off()
database = read.csv('../data/fap_database_withexposure.csv',header=T)
setwd("~/Library/CloudStorage/OneDrive-UniversityofCambridge/PhD/fap/FAP_colon_github/Mutation_burden/")
database = read.csv('../data/fap_database_withexposure.csv',header=T)
table(database$group_id[database$type=='polyp'])
View(database)
# setup
library(trackViewer)
library(maftools)
library(grid)
library(ggplot2)
library(tidyr)
library(dplyr)
library(ggpubr)
cols = c("#8DD3C7", "#CFECBB", "#F4F3B9", "#BD98A2","#F5847A", "#8AB1C9","#CECBD0", "#D3B387", "#8DD3C7","#EABE63","#BFD767", "#FCCDE5","#8A8A8A" )
# Oncoplot for polyps
maf_file="../data/polyp.maf"
cn.data = data.frame(
Gene = "APC",
Sample_name = c('PD44721N_PLP_006','PD42778H_PLP_008','PD42778D_PLP_003','PD44721I_PLP_002'),
CN = 'LOH',
stringsAsFactors = FALSE
)
all_cols = RColorBrewer::brewer.pal(n = 9, name = 'Paired')
names(all_cols) = c(
'Frame_Shift_Del',
'Missense_Mutation',
'Nonsense_Mutation',
'Multi_Hit',
'Frame_Shift_Ins',
'In_Frame_Ins',
'Splice_Site',
'In_Frame_Del',
'LOH'
)
polyp_maf = read.maf(maf = maf_file,
cnTable = cn.data,
verbose = FALSE)
oncoplot(maf = polyp_maf,drawColBar=F, colors = all_cols,top = 100, bgCol = "#EEEEEE", titleText = 'Adenomatous polyps')
# Oncoplot for ACF
maf_file="../data/acf.maf"
acf_maf = read.maf(maf = maf_file,
verbose = FALSE)
oncoplot(maf = acf_maf,drawColBar=F, colors = all_cols,top = 100, bgCol = "#EEEEEE", titleText = 'ACF outside of polyps')
# Merge oncoplot for polyps and ACF
coOncoplot(m1 = acf_maf, m2 = polyp_maf, genes = unique(c(acf_maf@gene.summary$Hugo_Symbol,polyp_maf@gene.summary$Hugo_Symbol)), m1Name = 'ACF outside of polyps', m2Name = 'Adenomatous polyps', colors = all_cols,bgCol = "#EEEEEE",removeNonMutated = FALSE, geneNamefont = 0.6)
table(database$group_id[database$type=='polyp'])
View(polyp_maf)
polyp_maf@data$Tumor_Sample_Barcode
# Oncoplot for polyps
maf_file="../data/polyp.maf"
cn.data = data.frame(
Gene = "APC",
Sample_name = c('PD44721N_PLP_006','PD42778H_PLP_008','PD42778D_PLP_003','PD44721I_PLP_002'),
CN = 'LOH',
stringsAsFactors = FALSE
)
all_cols = RColorBrewer::brewer.pal(n = 9, name = 'Paired')
names(all_cols) = c(
'Frame_Shift_Del',
'Missense_Mutation',
'Nonsense_Mutation',
'Multi_Hit',
'Frame_Shift_Ins',
'In_Frame_Ins',
'Splice_Site',
'In_Frame_Del',
'LOH'
)
polyp_maf = read.maf(maf = maf_file,
cnTable = cn.data,
verbose = FALSE)
oncoplot(maf = polyp_maf,drawColBar=F, colors = all_cols,top = 100, bgCol = "#EEEEEE", titleText = 'Adenomatous polyps')
# Merge oncoplot for polyps and ACF
coOncoplot(m1 = acf_maf, m2 = polyp_maf, genes = unique(c(acf_maf@gene.summary$Hugo_Symbol,polyp_maf@gene.summary$Hugo_Symbol)), m1Name = 'ACF outside of polyps', m2Name = 'Adenomatous polyps', colors = all_cols,bgCol = "#EEEEEE",removeNonMutated = FALSE, geneNamefont = 0.6)
pdf(paste0("/Users/yw2/Library/CloudStorage/OneDrive-UniversityofCambridge/PhD/fap/figure/Fig2/lolliplot.pdf"),width = 6.5, height = 4)
coOncoplot(m1 = acf_maf, m2 = polyp_maf, genes = unique(c(acf_maf@gene.summary$Hugo_Symbol,polyp_maf@gene.summary$Hugo_Symbol)), m1Name = 'ACF outside of polyps', m2Name = 'Adenomatous polyps', colors = all_cols,bgCol = "#EEEEEE",removeNonMutated = FALSE, geneNamefont = 0.6)
dev.off()
# setup
library(trackViewer)
library(maftools)
library(grid)
library(ggplot2)
library(tidyr)
library(dplyr)
library(ggpubr)
cols = c("#8DD3C7", "#CFECBB", "#F4F3B9", "#BD98A2","#F5847A", "#8AB1C9","#CECBD0", "#D3B387", "#8DD3C7","#EABE63","#BFD767", "#FCCDE5","#8A8A8A" )
# Oncoplot for polyps
maf_file="../data/polyp.maf"
cn.data = data.frame(
Gene = "APC",
Sample_name = c('PD44721N_PLP_006','PD42778H_PLP_008','PD42778D_PLP_003','PD44721I_PLP_002'),
CN = 'LOH',
stringsAsFactors = FALSE
)
all_cols = RColorBrewer::brewer.pal(n = 9, name = 'Paired')
names(all_cols) = c(
'Frame_Shift_Del',
'Missense_Mutation',
'Nonsense_Mutation',
'Multi_Hit',
'Frame_Shift_Ins',
'In_Frame_Ins',
'Splice_Site',
'In_Frame_Del',
'LOH'
)
polyp_maf = read.maf(maf = maf_file,
cnTable = cn.data,
verbose = FALSE)
oncoplot(maf = polyp_maf,drawColBar=F, colors = all_cols,top = 100, bgCol = "#EEEEEE", titleText = 'Adenomatous polyps')
# Oncoplot for polyps
maf_file="../data/polyp.maf"
cn.data = data.frame(
Gene = "APC",
Sample_name = c('PD44721N_PLP_006','PD42778H_PLP_008','PD42778D_PLP_003','PD44721I_PLP_002_2'),
CN = 'LOH',
stringsAsFactors = FALSE
)
all_cols = RColorBrewer::brewer.pal(n = 9, name = 'Paired')
names(all_cols) = c(
'Frame_Shift_Del',
'Missense_Mutation',
'Nonsense_Mutation',
'Multi_Hit',
'Frame_Shift_Ins',
'In_Frame_Ins',
'Splice_Site',
'In_Frame_Del',
'LOH'
)
polyp_maf = read.maf(maf = maf_file,
cnTable = cn.data,
verbose = FALSE)
oncoplot(maf = polyp_maf,drawColBar=F, colors = all_cols,top = 100, bgCol = "#EEEEEE", titleText = 'Adenomatous polyps')
# Merge oncoplot for polyps and ACF
coOncoplot(m1 = acf_maf, m2 = polyp_maf, genes = unique(c(acf_maf@gene.summary$Hugo_Symbol,polyp_maf@gene.summary$Hugo_Symbol)), m1Name = 'ACF outside of polyps', m2Name = 'Adenomatous polyps', colors = all_cols,bgCol = "#EEEEEE",removeNonMutated = FALSE, geneNamefont = 0.6)
# Oncoplot for polyps
maf_file="../data/polyp.maf"
cn.data = data.frame(
Gene = "APC",
Sample_name = c('PD44721N_PLP_006','PD42778H_PLP_008','PD42778D_PLP_003','PD44721I_PLP_002_2'),
CN = 'LOH',
stringsAsFactors = FALSE
)
all_cols = RColorBrewer::brewer.pal(n = 9, name = 'Paired')
names(all_cols) = c(
'Frame_Shift_Del',
'Missense_Mutation',
'Nonsense_Mutation',
'Multi_Hit',
'Frame_Shift_Ins',
'In_Frame_Ins',
'Splice_Site',
'In_Frame_Del',
'LOH'
)
polyp_maf = read.maf(maf = maf_file,
cnTable = cn.data,
verbose = FALSE)
oncoplot(maf = polyp_maf,drawColBar=F, colors = all_cols,top = 100, bgCol = "#EEEEEE", titleText = 'Adenomatous polyps')
# Merge oncoplot for polyps and ACF
coOncoplot(m1 = acf_maf, m2 = polyp_maf, genes = unique(c(acf_maf@gene.summary$Hugo_Symbol,polyp_maf@gene.summary$Hugo_Symbol)), m1Name = 'ACF outside of polyps', m2Name = 'Adenomatous polyps', colors = all_cols,bgCol = "#EEEEEE",removeNonMutated = FALSE, geneNamefont = 0.6)
pdf(paste0("/Users/yw2/Library/CloudStorage/OneDrive-UniversityofCambridge/PhD/fap/figure/Fig2/lolliplot.pdf"),width = 6.5, height = 4)
coOncoplot(m1 = acf_maf, m2 = polyp_maf, genes = unique(c(acf_maf@gene.summary$Hugo_Symbol,polyp_maf@gene.summary$Hugo_Symbol)), m1Name = 'ACF outside of polyps', m2Name = 'Adenomatous polyps', colors = all_cols,bgCol = "#EEEEEE",removeNonMutated = FALSE, geneNamefont = 0.6)
dev.off()
View(database)
library(ggtree)
library(ape)
database = read.csv('../data/fap_database_withexposure.csv',header=T)
database$type = as.factor(database$type)
database$type = relevel(database$type , ref = "normal")
#add number of APC mutations
database$num_APC = 3-(is.na(database$germlinehit)+is.na(database$somatic1)+is.na(database$somatic2))
database$num_APC = as.numeric(database$num_APC)
database=database[database$coverage>=10,]
database$germlinehit= 'APC'
database_exclude_bystander = database[(database$num_APC>=2 | database$type =='normal' ),]
database_exclude_bystander$group_id[database_exclude_bystander$group_id=='normal'] = database_exclude_bystander$sample[database_exclude_bystander$group_id=='normal']
df = database_exclude_bystander[database_exclude_bystander$type %in%  c('normal'),]
lmm_sbs5 <- lme(SBS5~ age, random = ~1|patient/block/polyp_id, data = df, method = "ML")
library(nlme)
df = database_exclude_bystander[database_exclude_bystander$type %in%  c('normal'),]
lmm_sbs5 <- lme(SBS5~ age, random = ~1|patient/block/polyp_id, data = df, method = "ML")
df = database_exclude_bystander[database_exclude_bystander$type %in%  c('normal'),]
lmm_sbs5 <- lme(SBS5~ age, random = ~1|patient/block/group_id, data = df, method = "ML")
summary(lmm_sbs5)
df=read.csv("~/Downloads/ACF_polyp_trunk_length.csv")
getwd()
df=read.csv("../data/ACF_polyp_trunk_length.csv")
lmm_sbs5
lmm_sbs5['fixed']
ranef(lmm_sbs5)
lmm_sbs5 <- lme(SBS5~ age, random = ~1|patient/block/group_id -1, data = df, method = "ML")
lmm_sbs5 <- lme(SBS5~ age, random = ~age|patient/block/group_id -1, data = df, method = "ML")
df = database_exclude_bystander[database_exclude_bystander$type %in%  c('normal'),]
lmm_sbs5 <- lme(SBS5~ age, random = ~age|patient/block/group_id -1, data = df, method = "ML")
lmm_sbs5 <- lme(SBS5~ age, random = ~age|patient/block/group_id, data = df, method = "ML")
df = database_exclude_bystander[database_exclude_bystander$type %in%  c('normal'),]
lmm_sbs5 <- lme(SBS5~ age, random = ~age|patient/block/group_id, data = df, method = "ML")
df = database_exclude_bystander[database_exclude_bystander$type %in%  c('normal'),]
lmm_sbs5 <- lme(SBS5~ age, random = ~age|patient/block, data = df, method = "ML")
df = database_exclude_bystander[database_exclude_bystander$type %in%  c('normal'),]
lmm_sbs5 <- lme(SBS5~ age, random = ~age|patient, data = df, method = "ML")
df = database_exclude_bystander[database_exclude_bystander$type %in%  c('normal'),]
lmm_sbs5 <- lme(SBS5~ age, random = ~1|patient/block, data = df, method = "ML")
summary(lmm_sbs5)
randef(lmm_sbs5)
ranef(lmm_sbs5)
lmm_sbs5 <- lme(SBS5~ age, random = ~age-1|patient/block, data = df, method = "ML")
summary(lmm_sbs5)
ranef(lmm_sbs5)
summary(lmm_sbs5)
colnames(df)
df=read.csv("../data/ACF_polyp_trunk_length.csv")
colnames(df)
df = database_exclude_bystander[database_exclude_bystander$type %in%  c('normal'),]
lmm_sbs5 <- lme(SBS5~ age-1, random = ~age-1|patient/block, data = df, method = "ML")
summary(lmm_sbs5)
View(df)
trunk_length=read.csv("../data/ACF_polyp_trunk_length.csv")
View(trunk_length)
ranef(lmm_sbs5)$`block:patient
ranef(lmm_sbs5)$`block:patient`
ranef(lmm_sbs5)
library(dplyr)
library(ggtree)
library(ape)
library(nlme)
library(dplyr)
fixed_slope <- fixef(lmm_sbs5)["age"]
random_slopes <- ranef(lmm_sbs5)$`block:patient`
random_slopes
fixed_slope
ranef(lmm_sbs5)$block
df = database_exclude_bystander[database_exclude_bystander$type %in%  c('normal'),]
lmm_sbs5 <- lme(SBS5~ age-1, random = ~age-1|patient, data = df, method = "ML")
summary(lmm_sbs5)
fixed_slope <- fixef(lmm_sbs5)["age"]
ranef_block <- ranef(lmm_sbs5)$`patient`
ranef_block
ranef(lmm_sbs5)$`patient`
ranef(lmm_sbs5)
fixed_slope <- fixef(lmm_sbs5)["age"]
ranef_slope  <- ranef(lmm_sbs5)
ranef_slope
View(ranef_slope)
View(ranef_slope)
df_trunk_length=read.csv("../data/ACF_polyp_trunk_length.csv")
fixed_slope <- fixef(lmm_sbs5)["age"]
ranef_slope  <- ranef(lmm_sbs5)
df_trunk_length <- df_trunk_length %>%
left_join(ranef_slope, by = "patient")
View(ranef_slope)
ranef_patient <- ranef(lmm_sbs5) %>%
tibble::rownames_to_column("patient") %>%
rename(random_slope_patient = age)
View(ranef_patient)
df_trunk_length <- df_trunk_length %>%
left_join(ranef_slope, by = "patient")
df_trunk_length=read.csv("../data/ACF_polyp_trunk_length.csv")
ranef_patient <- ranef(lmm_sbs5) %>%
tibble::rownames_to_column("patient") %>%
rename(random_slope_patient = age)
df_trunk_length <- df_trunk_length %>%
left_join(ranef_patient, by = "patient")
View(df_trunk_length)
df_trunk_length <- df_trunk_length %>%
mutate(full_slope = fixed_slope + ranef_patient,
age_onset_estimated = SBS5_trunk / full_slope)
fixed_slope + ranef_patient
df_trunk_length$random_slope_patient
View(ranef_patient)
ranef_patient <- ranef(lmm_sbs5) %>%
tibble::rownames_to_column("patient") %>%
rename(random_slope_patient = age)
View(ranef_patient)
View(ranef_patient)
df_trunk_length <- df_trunk_length %>%
mutate(full_slope = fixed_slope + random_slope_patient,
age_onset_estimated = SBS5_trunk / full_slope)
View(df_trunk_length)
View(database)
View(df_trunk_length)
knitr::opts_chunk$set(echo = TRUE)
library(ggtree)
library(ape)
patient='PD42778'
tree_df = read.table(paste0("~/Documents/FARM/colon_hg38/fap/snp/",patient,"/",patient,"_snp_tree_with_branch_length_adjusted.txt"), sep='\t',header=T)
View(df)
df = database_exclude_bystander[database_exclude_bystander$type %in%  c('normal'),]
patient='PD44721'
tree_df = read.table(paste0("~/Documents/FARM/colon_hg38/fap/snp/",patient,"/",patient,"_snp_tree_with_branch_length_adjusted.txt"), sep='\t',header=T)
tree_df = read.table(paste0("~/Documents/FARM/colon_hg38/fap/snp/",patient,"/",patient,"_snp_tree_with_branch_length_adjusted.txt"), sep='\t',header=T)
View(tree_df)
node=54
sig_df= read.table(paste0('~/Documents/FARM/colon_hg38/snp/hdp/refit/fit_branch_',patient,'_',node,'.txt'))
this_node=node
parent_node=tree_df$parent[tree_df$node==node]
burden=tree_df$adj_branch_length[tree_df$node==node]
while(parent_node!=this_node){
this_node=parent_node
parent_node=tree_df$parent[tree_df$node==this_node]
burden=burden+tree_df$adj_branch_length[tree_df$node==this_node]
}
burden
sig_df['SBS5',]*burden
sig_df['SBS1',]*burden
df=read.csv("~/Downloads/ACF_polyp_trunk_length.csv")
df=read.csv("~/Downloads/ACF_polyp_trunk_length.csv")
df_trunk_length=read.csv("../data/ACF_polyp_trunk_length.csv")
for (i in 1:nrow(df)){
crypt=df$crypt[i]
node=strsplit(df$trunk[i],'_')[[1]][2]
patient=df$patient[i]
tree_df = read.table(paste0("~/Documents/FARM/colon_hg38/fap/snp/",patient,"/",patient,"_snp_tree_with_branch_length_adjusted.txt"), sep='\t',header=T)
sig_df= read.table(paste0('~/Documents/FARM/colon_hg38/snp/hdp/refit/fit_branch_',patient,'_',node,'.txt'))
this_node=node
parent_node=tree_df$parent[tree_df$node==node]
burden=tree_df$adj_branch_length[tree_df$node==node]
while(parent_node!=this_node){
this_node=parent_node
parent_node=tree_df$parent[tree_df$node==this_node]
burden=burden+tree_df$adj_branch_length[tree_df$node==this_node]
}
df$SBS1_trunk[i] = sig_df['SBS1',]*burden
df$SBS_total_branch[i] = database$sbstotal_corr[database$sample==crypt] - df$SBS_total_trunk[i]
df$SBS5_branch[i] = database$SBS5[database$sample==crypt] - df$SBS5_trunk[i]
df$SBS1_branch[i] = database$SBS1[database$sample==crypt] - df$SBS1_trunk[i]
}
View(df)
View(df_trunk_length)
for (i in 1:nrow(df_trunk_length)){
crypt=df_trunk_length$crypt[i]
node=strsplit(df_trunk_length$trunk[i],'_')[[1]][2]
patient=df_trunk_length$patient[i]
tree_df = read.table(paste0("~/Documents/FARM/colon_hg38/fap/snp/",patient,"/",patient,"_snp_tree_with_branch_length_adjusted.txt"), sep='\t',header=T)
sig_df= read.table(paste0('~/Documents/FARM/colon_hg38/snp/hdp/refit/fit_branch_',patient,'_',node,'.txt'))
this_node=node
parent_node=tree_df$parent[tree_df$node==node]
burden=tree_df$adj_branch_length[tree_df$node==node]
while(parent_node!=this_node){
this_node=parent_node
parent_node=tree_df$parent[tree_df$node==this_node]
burden=burden+tree_df$adj_branch_length[tree_df$node==this_node]
}
df_trunk_length$SBS1_trunk[i] = sig_df['SBS1',]*burden
df_trunk_length$SBS_total_branch[i] = database$sbstotal_corr[database$sample==crypt] - df_trunk_length$SBS_total_trunk[i]
df_trunk_length$SBS5_branch[i] = database$SBS5[database$sample==crypt] - df_trunk_length$SBS5_trunk[i]
df_trunk_length$SBS1_branch[i] = database$SBS1[database$sample==crypt] - df_trunk_length$SBS1_trunk[i]
}
View(df_trunk_length)
write.csv(df_trunk_length,"~/Downloads/ACF_polyp_trunk_length.csv", quote = F, row.names = F)
write.csv(df_trunk_length,"../data/ACF_polyp_trunk_length.csv", quote = F, row.names = F)
View(df_trunk_length)
write.csv(df_trunk_length,"../data/ACF_polyp_trunk_length.csv", quote = F, row.names = F)
getwd()
write.csv(df_trunk_length,"../data/ACF_polyp_trunk_length.csv", quote = F, row.names = F)
write.csv(df_trunk_length,"~/Library/CloudStorage/OneDrive-UniversityofCambridge/PhD/fap/FAP_colon_github/data/ACF_polyp_trunk_length.csv", quote = F, row.names = F)
table(df_trunk_length$group)
table(df_trunk_length$group[df_trunk_length$type=='acf'])
table(df_trunk_length$group[df_trunk_length$type=='polyp'])
unique(database$group_id[!database$group_id %in% df_trunk_length$group])
View(df_trunk_length)
df_trunk_length=read.csv("../data/ACF_polyp_trunk_length.csv")
fixed_slope <- fixef(lmm_sbs5)["age"]
ranef_patient <- ranef(lmm_sbs5) %>%
tibble::rownames_to_column("patient") %>%
rename(random_slope_patient = age)
df_trunk_length <- df_trunk_length %>%
left_join(ranef_patient, by = "patient")
df_trunk_length <- df_trunk_length %>%
mutate(full_slope = fixed_slope + random_slope_patient,
age_onset_estimated = SBS5_trunk / full_slope)
View(df_trunk_length)
df_trunk=df[,c(1:5,7:10)]
View(df_trunk)
df_trunk=df_trunk_length[,c(1:5,7:10)]
df_trunk=unique(df_trunk)
View(df_trunk)
View(df_trunk)
df_trunk_length$trunk_driver_1 = T
df_trunk_length$trunk_driver_1[df_trunk_length$trunk_somatic_driver>1] = F
lmm <- lme(SBS_total_branch ~ trunk_driver_1, random = ~1|patient/group, data = df, method = "ML")
lmm <- lme(SBS_total_branch ~ trunk_driver_1, random = ~1|patient/group, data = df_trunk_length, method = "ML")
summary(lmm) #SBS1
colnames(df_trunk_length)
df_trunk=df[,c(1:5,7:10,17)]
df_trunk=unique(df_trunk)
lmm <- lme(SBS1_trunk ~ trunk_driver_1, random = ~1|patient, data = df_trunk, method = "ML")
summary(lmm) #SBS5,SBStotal
df_trunk=df_trunk_length[,c(1:5,7:10,17)]
df_trunk=unique(df_trunk)
lmm <- lme(SBS1_trunk ~ trunk_driver_1, random = ~1|patient, data = df_trunk, method = "ML")
summary(lmm) #SBS5,SBStotal
lmm <- lme(SBStotal_trunk ~ trunk_driver_1, random = ~1|patient, data = df_trunk, method = "ML")
summary(lmm) #SBS5,SBStotal
lmm <- lme(SBStotal_trunk ~ trunk_driver_1, random = ~1|patient, data = df_trunk, method = "ML")
View(df_trunk)
lmm <- lme(SBS_total_trunk ~ trunk_driver_1, random = ~1|patient, data = df_trunk, method = "ML")
summary(lmm) #SBS5,SBStotal
View(df_trunk)
lmm <- lme(SBS_total_trunk ~ type, random = ~1|patient, data = df_trunk, method = "ML")
summary(lmm)
lmm <- lme(SBS_total_branch ~ type, random = ~1|patient, data = df_trunk, method = "ML")
lmm <- lme(SBS_total_branch ~ type, random = ~1|patient, data = df_trunk, method = "ML")
View(df_trunk)
lmm <- lme(SBS_total_branch ~ type, random = ~1|patient, data = df_trunk_length, method = "ML")
summary(lmm)
View(df_trunk_length)
lmm <- lme(SBS_total_branch ~ type, random = ~1|patient/group, data = df_trunk_length, method = "ML")
summary(lmm)
pvalues_lst=c()
df_trunk_length$trunk_driver_1 = T
df_trunk_length$trunk_driver_1[df_trunk_length$trunk_somatic_driver>1] = F
lmm <- lme(SBS_total_branch ~ trunk_driver_1, random = ~1|patient/group, data = df_trunk_length, method = "ML")
summary(lmm) #SBS1
df_trunk=df_trunk_length[,c(1:5,7:10,17)]
df_trunk=unique(df_trunk)
lmm <- lme(SBS_total_trunk ~ trunk_driver_1, random = ~1|patient, data = df_trunk, method = "ML")
summary(lmm) #SBS5,SBStotal
pvalues_lst=c(pvalues_lst,summary(lmm)$tTable[ , "p-value"])
lmm <- lme(SBS_total_trunk ~ type, random = ~1|patient, data = df_trunk, method = "ML")
summary(lmm)
pvalues_lst=c(pvalues_lst,summary(lmm)$tTable[ , "p-value"])
lmm <- lme(SBS_total_branch ~ type, random = ~1|patient/group, data = df_trunk_length, method = "ML")
summary(lmm)
pvalues_lst=c(pvalues_lst,summary(lmm)$tTable[ , "p-value"])
summary(lmm)
p_corrected =  p.adjust(pvalues_lst, method = "BH")
p_table = data.frame(p=pvalues_lst,p_adj=p_corrected)
View(p_table)
View(df_trunk_length)
df_trunk_length=read.csv("../data/ACF_polyp_trunk_length.csv")
fixed_slope <- fixef(lmm_sbs5)["age"]
ranef_patient <- ranef(lmm_sbs5) %>%
tibble::rownames_to_column("patient") %>%
rename(random_slope_patient = age)
df_trunk_length <- df_trunk_length %>%
left_join(ranef_patient, by = "patient")
df_trunk_length <- df_trunk_length %>%
mutate(full_slope = fixed_slope + random_slope_patient,
age_onset_upperlim = SBS5_trunk / full_slope)
View(df_trunk_length)
df_trunk_length=read.csv("../data/ACF_polyp_trunk_length.csv")
fixed_slope <- fixef(lmm_sbs5)["age"]
ranef_patient <- ranef(lmm_sbs5) %>%
tibble::rownames_to_column("patient") %>%
rename(random_slope_patient = age)
df_trunk_length <- df_trunk_length %>%
left_join(ranef_patient, by = "patient")
df_trunk_length <- df_trunk_length %>%
mutate(full_slope = fixed_slope + random_slope_patient,
age_onset_upperlim = SBS5_trunk / full_slope) %>%
mutate(age_onset_upperlim = if_else(age_onset_upperlim > age, age, age_onset_upperlim))
View(df_trunk_length)
write.csv(df_trunk_length,"../data/ACF_polyp_trunk_length.csv", quote = F, row.names = F)
df_trunk_length=read.csv("../data/ACF_polyp_trunk_length.csv")
fixed_slope <- fixef(lmm_sbs5)["age"]
sessionInfo()$otherPkgs
loaded_pkgs <- sessionInfo()$otherPkgs
pkg_df <- data.frame(
Package = names(loaded_pkgs),
Version = sapply(loaded_pkgs, function(x) x$Version),
stringsAsFactors = FALSE
)
print(pkg_df)
library(ggplot2)
library(RColorBrewer)
library(nlme)
library(tidyverse)
loaded_pkgs <- sessionInfo()$otherPkgs
pkg_df <- data.frame(
Package = names(loaded_pkgs),
Version = sapply(loaded_pkgs, function(x) x$Version),
stringsAsFactors = FALSE
)
print(pkg_df)
getwd()
